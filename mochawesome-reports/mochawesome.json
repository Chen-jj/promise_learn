{
  "reportTitle": "promise_learn",
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2016-10-28T09:36:32.984Z",
    "end": "2016-10-28T09:36:34.851Z",
    "duration": 1867,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "my_fetch",
        "suites": [],
        "tests": [
          {
            "title": "应该返回promise",
            "fullTitle": "my_fetch 应该返回promise",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> temp = fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>);<br>expect(temp).to.be.an.instanceof(<span class=\"hljs-built_in\">Promise</span>);<br>expect(fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.have.property(<span class=\"hljs-string\">'then'</span>);",
            "isRoot": false,
            "uuid": "603f3a48-c083-45f1-ae18-f2f8c3d3fc94",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "当url不是绝对地址时应该reject",
            "fullTitle": "my_fetch 当url不是绝对地址时应该reject",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'some/url'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
            "isRoot": false,
            "uuid": "b1dbf7f9-f1d1-45a9-a049-cf1cba9eb5c5",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "当协议不为http或https时应该reject",
            "fullTitle": "my_fetch 当协议不为http或https时应该reject",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
            "isRoot": false,
            "uuid": "cca97db5-ffc1-4242-8497-98380df45ada",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "应该resolve请求的相应结果(http)",
            "fullTitle": "my_fetch 应该resolve请求的相应结果(http)",
            "timedOut": false,
            "duration": 577,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'http://jdc.jd.com'</span>;<br><span class=\"hljs-keyword\">return</span> fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>})",
            "isRoot": false,
            "uuid": "9f8d4b71-3e57-4221-99cd-93b08ae6a705",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "应该resolve请求的相应结果(https)",
            "fullTitle": "my_fetch 应该resolve请求的相应结果(https)",
            "timedOut": false,
            "duration": 1232,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'https://api.github.com'</span>;<br>fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>\tdone();<br>})",
            "isRoot": false,
            "uuid": "de84f22a-be42-46bf-9c36-a37a003697d0",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/my_fetch.test.js",
        "uuid": "ef1248af-5421-4e72-88cc-d12c6f668463",
        "fullFile": "/Users/Cjj/cjj/promise_learn/test/my_fetch.test.js",
        "passes": [
          {
            "title": "应该返回promise",
            "fullTitle": "my_fetch 应该返回promise",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> temp = fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>);<br>expect(temp).to.be.an.instanceof(<span class=\"hljs-built_in\">Promise</span>);<br>expect(fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.have.property(<span class=\"hljs-string\">'then'</span>);",
            "isRoot": false,
            "uuid": "603f3a48-c083-45f1-ae18-f2f8c3d3fc94",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "当url不是绝对地址时应该reject",
            "fullTitle": "my_fetch 当url不是绝对地址时应该reject",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'some/url'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
            "isRoot": false,
            "uuid": "b1dbf7f9-f1d1-45a9-a049-cf1cba9eb5c5",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "当协议不为http或https时应该reject",
            "fullTitle": "my_fetch 当协议不为http或https时应该reject",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
            "isRoot": false,
            "uuid": "cca97db5-ffc1-4242-8497-98380df45ada",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "应该resolve请求的相应结果(http)",
            "fullTitle": "my_fetch 应该resolve请求的相应结果(http)",
            "timedOut": false,
            "duration": 577,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'http://jdc.jd.com'</span>;<br><span class=\"hljs-keyword\">return</span> fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>})",
            "isRoot": false,
            "uuid": "9f8d4b71-3e57-4221-99cd-93b08ae6a705",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          },
          {
            "title": "应该resolve请求的相应结果(https)",
            "fullTitle": "my_fetch 应该resolve请求的相应结果(https)",
            "timedOut": false,
            "duration": 1232,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'https://api.github.com'</span>;<br>fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>\tdone();<br>})",
            "isRoot": false,
            "uuid": "de84f22a-be42-46bf-9c36-a37a003697d0",
            "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1827
      },
      {
        "title": "optionsMerge",
        "suites": [],
        "tests": [
          {
            "title": "直接调用应该返回Merge实例",
            "fullTitle": "optionsMerge 直接调用应该返回Merge实例",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.be.an.instanceof(Merge);",
            "isRoot": false,
            "uuid": "be1b4497-1fc6-46ae-9afc-41eac992049e",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "只有支持绝对地址",
            "fullTitle": "optionsMerge 只有支持绝对地址",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'jdc.jd.com'</span>);}).to.throw(<span class=\"hljs-string\">\"only absolute urls are supported.\"</span>);",
            "isRoot": false,
            "uuid": "69e8bcfa-ffec-4f97-90e6-c841f0195aa4",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "只支持http或https协议",
            "fullTitle": "optionsMerge 只支持http或https协议",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'https://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)}).to.throw(<span class=\"hljs-string\">\"only http(s) protocols are supported.\"</span>);",
            "isRoot": false,
            "uuid": "e5874a30-fe5b-4c34-8989-0eac92eeae8f",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "应该支持自定义属性",
            "fullTitle": "optionsMerge 应该支持自定义属性",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>, {<br>\tmethod: <span class=\"hljs-string\">\"POST\"</span>,<br>\theaders: {<br>\t\ta: <span class=\"hljs-string\">\"1\"</span><br>\t}<br>});<br>expect(options.method).to.equal(<span class=\"hljs-string\">\"POST\"</span>);<br>expect(options.headers.a).to.equal(<span class=\"hljs-string\">\"1\"</span>);",
            "isRoot": false,
            "uuid": "785cd9af-dc43-4f2e-a995-c71b04f75c6f",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "应该初始化request headers的Accept、Connection、User-Agent字段",
            "fullTitle": "optionsMerge 应该初始化request headers的Accept、Connection、User-Agent字段",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Accept'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Connection'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'User-Agent'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>, {<br>\theaders: {<br>\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'text/html'</span>,<br>\t\t<span class=\"hljs-string\">'Connection'</span>: <span class=\"hljs-string\">'keep-alive'</span>,<br>\t\t<span class=\"hljs-string\">'User-Agent'</span>: <span class=\"hljs-string\">'chrome'</span><br>\t}<br>})<br>expect(options.headers[<span class=\"hljs-string\">\"Accept\"</span>]).to.equal(<span class=\"hljs-string\">'text/html'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"Connection\"</span>]).to.equal(<span class=\"hljs-string\">'keep-alive'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"User-Agent\"</span>]).to.equal(<span class=\"hljs-string\">'chrome'</span>);",
            "isRoot": false,
            "uuid": "2e5f5119-42b4-4b0b-bb64-3bdf44b5f5d0",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/optionsMerge.test.js",
        "uuid": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
        "fullFile": "/Users/Cjj/cjj/promise_learn/test/optionsMerge.test.js",
        "passes": [
          {
            "title": "直接调用应该返回Merge实例",
            "fullTitle": "optionsMerge 直接调用应该返回Merge实例",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.be.an.instanceof(Merge);",
            "isRoot": false,
            "uuid": "be1b4497-1fc6-46ae-9afc-41eac992049e",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "只有支持绝对地址",
            "fullTitle": "optionsMerge 只有支持绝对地址",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'jdc.jd.com'</span>);}).to.throw(<span class=\"hljs-string\">\"only absolute urls are supported.\"</span>);",
            "isRoot": false,
            "uuid": "69e8bcfa-ffec-4f97-90e6-c841f0195aa4",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "只支持http或https协议",
            "fullTitle": "optionsMerge 只支持http或https协议",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'https://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)}).to.throw(<span class=\"hljs-string\">\"only http(s) protocols are supported.\"</span>);",
            "isRoot": false,
            "uuid": "e5874a30-fe5b-4c34-8989-0eac92eeae8f",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "应该支持自定义属性",
            "fullTitle": "optionsMerge 应该支持自定义属性",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>, {<br>\tmethod: <span class=\"hljs-string\">\"POST\"</span>,<br>\theaders: {<br>\t\ta: <span class=\"hljs-string\">\"1\"</span><br>\t}<br>});<br>expect(options.method).to.equal(<span class=\"hljs-string\">\"POST\"</span>);<br>expect(options.headers.a).to.equal(<span class=\"hljs-string\">\"1\"</span>);",
            "isRoot": false,
            "uuid": "785cd9af-dc43-4f2e-a995-c71b04f75c6f",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          },
          {
            "title": "应该初始化request headers的Accept、Connection、User-Agent字段",
            "fullTitle": "optionsMerge 应该初始化request headers的Accept、Connection、User-Agent字段",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Accept'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Connection'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'User-Agent'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>, {<br>\theaders: {<br>\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'text/html'</span>,<br>\t\t<span class=\"hljs-string\">'Connection'</span>: <span class=\"hljs-string\">'keep-alive'</span>,<br>\t\t<span class=\"hljs-string\">'User-Agent'</span>: <span class=\"hljs-string\">'chrome'</span><br>\t}<br>})<br>expect(options.headers[<span class=\"hljs-string\">\"Accept\"</span>]).to.equal(<span class=\"hljs-string\">'text/html'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"Connection\"</span>]).to.equal(<span class=\"hljs-string\">'keep-alive'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"User-Agent\"</span>]).to.equal(<span class=\"hljs-string\">'chrome'</span>);",
            "isRoot": false,
            "uuid": "2e5f5119-42b4-4b0b-bb64-3bdf44b5f5d0",
            "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "fd855ae0-1789-489a-9f61-9dee30649596",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "应该返回promise",
      "fullTitle": "my_fetch 应该返回promise",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> temp = fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>);<br>expect(temp).to.be.an.instanceof(<span class=\"hljs-built_in\">Promise</span>);<br>expect(fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.have.property(<span class=\"hljs-string\">'then'</span>);",
      "isRoot": false,
      "uuid": "57554273-d52e-4c40-a987-e9423d56f825",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "当url不是绝对地址时应该reject",
      "fullTitle": "my_fetch 当url不是绝对地址时应该reject",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'some/url'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
      "isRoot": false,
      "uuid": "9b6c454c-0435-455e-a1b5-fbffb1e57aa7",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "当协议不为http或https时应该reject",
      "fullTitle": "my_fetch 当协议不为http或https时应该reject",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
      "isRoot": false,
      "uuid": "1ec1abbc-de26-466b-b702-ce6ba75d1553",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "应该resolve请求的相应结果(http)",
      "fullTitle": "my_fetch 应该resolve请求的相应结果(http)",
      "timedOut": false,
      "duration": 577,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'http://jdc.jd.com'</span>;<br><span class=\"hljs-keyword\">return</span> fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>})",
      "isRoot": false,
      "uuid": "7d22df6f-0842-4c97-98da-322927c272ed",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "应该resolve请求的相应结果(https)",
      "fullTitle": "my_fetch 应该resolve请求的相应结果(https)",
      "timedOut": false,
      "duration": 1232,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'https://api.github.com'</span>;<br>fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>\tdone();<br>})",
      "isRoot": false,
      "uuid": "f7238675-d47e-4657-a0b8-047946edb7cb",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "直接调用应该返回Merge实例",
      "fullTitle": "optionsMerge 直接调用应该返回Merge实例",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.be.an.instanceof(Merge);",
      "isRoot": false,
      "uuid": "4d13d12b-cf2d-4d59-8728-0812f3d3f716",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "只有支持绝对地址",
      "fullTitle": "optionsMerge 只有支持绝对地址",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'jdc.jd.com'</span>);}).to.throw(<span class=\"hljs-string\">\"only absolute urls are supported.\"</span>);",
      "isRoot": false,
      "uuid": "42ee2c66-39d0-49dd-bbf8-bf0df66d5b6e",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "只支持http或https协议",
      "fullTitle": "optionsMerge 只支持http或https协议",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'https://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)}).to.throw(<span class=\"hljs-string\">\"only http(s) protocols are supported.\"</span>);",
      "isRoot": false,
      "uuid": "9d8272a0-af46-45bf-bfb8-aeb92a5b71be",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "应该支持自定义属性",
      "fullTitle": "optionsMerge 应该支持自定义属性",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>, {<br>\tmethod: <span class=\"hljs-string\">\"POST\"</span>,<br>\theaders: {<br>\t\ta: <span class=\"hljs-string\">\"1\"</span><br>\t}<br>});<br>expect(options.method).to.equal(<span class=\"hljs-string\">\"POST\"</span>);<br>expect(options.headers.a).to.equal(<span class=\"hljs-string\">\"1\"</span>);",
      "isRoot": false,
      "uuid": "3169d8dd-2c2a-4d4a-8357-5b9801033fc2",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "应该初始化request headers的Accept、Connection、User-Agent字段",
      "fullTitle": "optionsMerge 应该初始化request headers的Accept、Connection、User-Agent字段",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Accept'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Connection'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'User-Agent'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>, {<br>\theaders: {<br>\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'text/html'</span>,<br>\t\t<span class=\"hljs-string\">'Connection'</span>: <span class=\"hljs-string\">'keep-alive'</span>,<br>\t\t<span class=\"hljs-string\">'User-Agent'</span>: <span class=\"hljs-string\">'chrome'</span><br>\t}<br>})<br>expect(options.headers[<span class=\"hljs-string\">\"Accept\"</span>]).to.equal(<span class=\"hljs-string\">'text/html'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"Connection\"</span>]).to.equal(<span class=\"hljs-string\">'keep-alive'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"User-Agent\"</span>]).to.equal(<span class=\"hljs-string\">'chrome'</span>);",
      "isRoot": false,
      "uuid": "9bf127d6-606f-41b0-ab9f-98ed0b54aa3f",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "应该返回promise",
      "fullTitle": "my_fetch 应该返回promise",
      "timedOut": false,
      "duration": 13,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> temp = fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>);<br>expect(temp).to.be.an.instanceof(<span class=\"hljs-built_in\">Promise</span>);<br>expect(fetch(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.have.property(<span class=\"hljs-string\">'then'</span>);",
      "isRoot": false,
      "uuid": "fa7d2ffa-2853-4176-8eae-77d426f1fc22",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "当url不是绝对地址时应该reject",
      "fullTitle": "my_fetch 当url不是绝对地址时应该reject",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'some/url'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
      "isRoot": false,
      "uuid": "d5c8a372-34d2-4c26-acc4-bebb6a2deabd",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "当协议不为http或https时应该reject",
      "fullTitle": "my_fetch 当协议不为http或https时应该reject",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> expect(fetch(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)).to.eventually.be.rejectedWith(<span class=\"hljs-built_in\">Error</span>);",
      "isRoot": false,
      "uuid": "09fe7be5-4fd9-4650-942a-4dcf05d7b1d3",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "应该resolve请求的相应结果(http)",
      "fullTitle": "my_fetch 应该resolve请求的相应结果(http)",
      "timedOut": false,
      "duration": 577,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'http://jdc.jd.com'</span>;<br><span class=\"hljs-keyword\">return</span> fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>})",
      "isRoot": false,
      "uuid": "1ac83fed-7f0d-47e2-9dfe-875f99884578",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "应该resolve请求的相应结果(https)",
      "fullTitle": "my_fetch 应该resolve请求的相应结果(https)",
      "timedOut": false,
      "duration": 1232,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> url = <span class=\"hljs-string\">'https://api.github.com'</span>;<br>fetch(url).then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\texpect(res.statusCode).to.equal(<span class=\"hljs-number\">200</span>);<br>\tdone();<br>})",
      "isRoot": false,
      "uuid": "dfe96cc4-f326-453b-a8cb-bb10346f9540",
      "parentUUID": "ef1248af-5421-4e72-88cc-d12c6f668463",
      "skipped": false
    },
    {
      "title": "直接调用应该返回Merge实例",
      "fullTitle": "optionsMerge 直接调用应该返回Merge实例",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)).to.be.an.instanceof(Merge);",
      "isRoot": false,
      "uuid": "3d76f906-b6a0-4583-be43-8ef8196b5a2e",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "只有支持绝对地址",
      "fullTitle": "optionsMerge 只有支持绝对地址",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'jdc.jd.com'</span>);}).to.throw(<span class=\"hljs-string\">\"only absolute urls are supported.\"</span>);",
      "isRoot": false,
      "uuid": "9838619a-a7a2-4721-a5b6-c151244abd28",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "只支持http或https协议",
      "fullTitle": "optionsMerge 只支持http或https协议",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'https://jdc.jd.com'</span>)}).to.not.throw(<span class=\"hljs-built_in\">Error</span>);<br>expect(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{Merge(<span class=\"hljs-string\">'ftp://jdc.jd.com'</span>)}).to.throw(<span class=\"hljs-string\">\"only http(s) protocols are supported.\"</span>);",
      "isRoot": false,
      "uuid": "bc61360c-a075-45ab-bf5f-26602c153229",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "应该支持自定义属性",
      "fullTitle": "optionsMerge 应该支持自定义属性",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'http://jdc.jd.com'</span>, {<br>\tmethod: <span class=\"hljs-string\">\"POST\"</span>,<br>\theaders: {<br>\t\ta: <span class=\"hljs-string\">\"1\"</span><br>\t}<br>});<br>expect(options.method).to.equal(<span class=\"hljs-string\">\"POST\"</span>);<br>expect(options.headers.a).to.equal(<span class=\"hljs-string\">\"1\"</span>);",
      "isRoot": false,
      "uuid": "cb7c6be2-6f3a-4526-9191-0fa90603d870",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    },
    {
      "title": "应该初始化request headers的Accept、Connection、User-Agent字段",
      "fullTitle": "optionsMerge 应该初始化request headers的Accept、Connection、User-Agent字段",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Accept'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'Connection'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>expect(options.headers[<span class=\"hljs-string\">'User-Agent'</span>]).to.be.a(<span class=\"hljs-string\">'string'</span>);<br>options = <span class=\"hljs-keyword\">new</span> Merge(<span class=\"hljs-string\">'https://api.github.com'</span>, {<br>\theaders: {<br>\t\t<span class=\"hljs-string\">'Accept'</span>: <span class=\"hljs-string\">'text/html'</span>,<br>\t\t<span class=\"hljs-string\">'Connection'</span>: <span class=\"hljs-string\">'keep-alive'</span>,<br>\t\t<span class=\"hljs-string\">'User-Agent'</span>: <span class=\"hljs-string\">'chrome'</span><br>\t}<br>})<br>expect(options.headers[<span class=\"hljs-string\">\"Accept\"</span>]).to.equal(<span class=\"hljs-string\">'text/html'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"Connection\"</span>]).to.equal(<span class=\"hljs-string\">'keep-alive'</span>);<br>expect(options.headers[<span class=\"hljs-string\">\"User-Agent\"</span>]).to.equal(<span class=\"hljs-string\">'chrome'</span>);",
      "isRoot": false,
      "uuid": "f73f1ccc-480e-473c-ad6b-fe14755058dd",
      "parentUUID": "27b4fb81-7f1e-4cfb-a80e-ed5a3378c16f",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}